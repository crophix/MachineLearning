learningRate = 0.2
numEpochs = {}
trainAcc = {}
testAcc = {}
confMat = {}

for i in range(10):
    for j in range(i+1,10):
        trainAcc[str(i)+str(j)] = 0.0
        numEpochs[str(i)+str(j)] = 1
        testAcc[str(i)+str(j)] = 0.0
        confMat[str(i)+str(j)] = {'TP':0, 'TN':0, 'FP':0, 'FN':0}

def startDoc():
    print "\\documentclass[11pt]{article}"
    print "\\usepackage{amsmath,amssymb}"
    print "\\author{Daniel Leblanc}"
    print "\\title{Discrete-event Simulation \\ Assignment 2}"
    print "\\date{April 25, 2013}"
    print "\\begin{document}"
    print "\\maketitle"
    print "\\paragraph{Notes:} The Confusion Matrix for each perceptron is formatted in the same way as the one generated by the code in the previous assignment.  I wasn't able to figure out how to label them in a reasonable fashion in LaTeX.  I ran the training data until I reach an epoch that failed to improve the training accuracy over the previous cycle.  Additional cycles do occasionally produce improvements, but this method seemed the easiest to manage and apply consistently."

def endDoc():
    print "\\end{document}"

def reset(lr):
    global numEpochs
    global trainAcc
    global testAcc
    global confMat
    global learningRate 
    learningRate = lr
    numEpochs.clear()
    trainAcc.clear()
    testAcc.clear()
    confMat.clear()
    for i in range(10):
        for j in range(i+1,10):
            trainAcc[str(i)+str(j)] = 0.0
            numEpochs[str(i)+str(j)] = 1
            testAcc[str(i)+str(j)] = 0.0
            confMat[str(i)+str(j)] = {'TP':0, 'TN':0, 'FP':0, 'FN':0}

def outputData():
    print "\\paragraph{Learning Rate %.2f:}Data from the training and testing.\\\\" %learningRate
    testTotal = 0.0
    trainTotal = 0.0
    count = 0
    runsTotal = 0.0
    for key in sorted(numEpochs.keys()):
        count += 1
        testTotal += testAcc[key] 
        trainTotal += trainAcc[key]
        runsTotal += numEpochs[key]
        print "\\begin{minipage}[t]{0.5\\textwidth}"
        #print "\\begin{center}"
        print "\\begin{tabular}{|l | r r|}"
        print "\\hline Perceptron & " + key[0] + " & " + key[1] + "\\\\"
        print "Number of Epochs & & "+ str(numEpochs[key]) + "\\\\"
        print "Training Accuracy & & "+ "%.3f" % trainAcc[key] + "\\\\"
        print "Test Accuracy & & "+ "%.3f" % testAcc[key] + "\\\\"
        print "Confusion Matrix & "+ str(confMat[key]['TP']) + ' & ' + str(confMat[key]['FP'])+ "\\\\"
        print " &" + str(confMat[key]['FN']) + ' & ' + str(confMat[key]['TN'])+ "\\\\ \\hline"
        print "\\end{tabular}"
        #print "\\end{center}"
        print "\\end{minipage}"
    trainTotal = trainTotal / count
    testTotal = testTotal / count
    runsTotal = runsTotal / count
    print "\\paragraph{Summary} For learning rate %.2f" % learningRate + " the total accuracy on the training data was %.3f" % trainTotal + ", and the total accuracy on the test data was %.3f." % testTotal + "  The average number of epochs needed by each perceptron was %.3f." % runsTotal)
    
